version: "3"

networks:
  net_frontend:
    driver: ${NETWORKS_DRIVER}
  net_backend:
    driver: ${NETWORKS_DRIVER}

services:
  nginx:
    image: nginx:${NGINX_VERSION}
    container_name: nginx
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${NGINX_SITES_PATH}:/var/www/html:rw
      - ${NGINX_SITES_CONF_MASTER}:/etc/nginx/nginx.conf:ro
      - ${NGINX_SITES_CONF_PATH}:/etc/nginx/conf.d:ro
      - ${NGINX_SSL_CONF_PATH}:/etc/nginx/ssl:ro
      - ${NGINX_HOST_LOG_PATH}:/var/log/nginx/:rw
    ports:
      - "${NGINX_HOST_HTTP_PORT}:80"
      - "${NGINX_HOST_HTTPS_PORT}:443"
    environment:
      - TZ=${TIMEZONE}
    depends_on:
      - php-fpm
    ulimits:
      nproc: 65535
    networks:
      - net_frontend
      - net_backend
    restart: always

  php-fpm:
    build: 
      context: ./php-fpm
    expose:
      - "9000"
    volumes:
      - ${NGINX_SITES_PATH}:/var/www/html:rw
      - ${PHP_CONF_PATH}/php.ini:/etc/php7/php.ini:ro
      - ${PHP_CONF_PATH}/php-fpm.d/www.conf:/etc/php7/php-fpm.d/www.conf:ro
      - ${PHP_LOG_PATH}:/var/log/php:rw
    environment:
      - TZ=${TIMEZONE}
    networks:
      - net_frontend
      - net_backend
    restart: always

  mysql:
    image: mysql:${MYSQL_VERSION}
    container_name: mysql
    command: [mysqld, --character-set-server=utf8, --collation-server=utf8_bin]
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${MYSQL_CONF_FILE}:/etc/mysql/my.cnf:ro
      - ${MYSQL_DATA}:/var/lib/mysql:rw
    environment:
      - DB_SERVER_HOST=${DB_SERVER_HOST}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=${TIMEZONE}
    ports:
      - ${DB_SERVER_PORT}:3306
    networks:
      - net_backend
    restart: always

  redis:
    image: redis:${REDIS_VERSION}
    container_name: redis
    volumes:
      - ${REDIS_DATA}:/data:rw
    ports:
      - "${REDIS_PORT}:6379"
    environment:
      - TZ=${TIMEZONE}
    networks:
      - net_backend
    restart: always

